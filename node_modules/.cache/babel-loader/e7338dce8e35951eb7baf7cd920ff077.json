{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\auth-react\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const emailValue = useRef();\n  const passValue = useRef();\n  const authCTX = useContext(AuthContext);\n  const history = useHistory();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    console.log(emailValue);\n    console.log(passValue);\n    e.preventDefault();\n    setLoading(true);\n    let url = \"\";\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAUSInGCstGKf1hFeOOLrKC-Lrc2tkYc-Q\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAUSInGCstGKf1hFeOOLrKC-Lrc2tkYc-Q\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: emailValue.current.value,\n        password: passValue.current.value,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (res.ok) {\n        res.json().then(data => {\n          console.log(data);\n          const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n          console.log(expirationTime);\n          authCTX.logIn(data.idToken, expirationTime);\n        });\n        history.replace(\"/\");\n      } else {\n        //handle the err\n        res.json().then(data => {\n          let errMessage = \"sign up / login failed\";\n\n          if (data.error && data.error.message) {\n            errMessage = data.error.message;\n          }\n\n          alert(errMessage);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailValue,\n          type: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passValue,\n          type: \"password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!loading && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading ... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"4IeVjQzPKreoMoRj6yz6YtnwQL4=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","AuthContext","classes","useHistory","AuthForm","isLogin","setIsLogin","loading","setLoading","emailValue","passValue","authCTX","history","switchAuthModeHandler","prevState","submitHandler","e","console","log","preventDefault","url","fetch","method","body","JSON","stringify","email","current","value","password","returnSecureToken","headers","then","res","ok","json","data","expirationTime","Date","getTime","expiresIn","logIn","idToken","replace","errMessage","error","message","alert","auth","control","actions","toggle"],"sources":["D:/React/projects/auth-react/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const emailValue = useRef();\n  const passValue = useRef();\n  const authCTX = useContext(AuthContext);\n  const history = useHistory();\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const submitHandler = (e) => {\n    console.log(emailValue);\n    console.log(passValue);\n    e.preventDefault();\n    setLoading(true);\n    let url = \"\";\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAUSInGCstGKf1hFeOOLrKC-Lrc2tkYc-Q\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAUSInGCstGKf1hFeOOLrKC-Lrc2tkYc-Q\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: emailValue.current.value,\n        password: passValue.current.value,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      setLoading(false);\n      if (res.ok) {\n        res.json().then((data) => {\n          console.log(data);\n          const expirationTime = new Date(\n            new Date().getTime() + +data.expiresIn * 1000\n          );\n          console.log(expirationTime);\n          authCTX.logIn(data.idToken, expirationTime);\n        });\n        history.replace(\"/\");\n      } else {\n        //handle the err\n        res.json().then((data) => {\n          let errMessage = \"sign up / login failed\";\n          if (data.error && data.error.message) {\n            errMessage = data.error.message;\n          }\n          alert(errMessage);\n        });\n      }\n    });\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input ref={emailValue} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input ref={passValue} type=\"password\" id=\"password\" required />\n        </div>\n        <div className={classes.actions}>\n          {!loading && (\n            <button disabled={loading}>\n              {isLogin ? \"Login\" : \"Create Account\"}\n            </button>\n          )}\n          {loading && <p>Loading ... </p>}\n\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}