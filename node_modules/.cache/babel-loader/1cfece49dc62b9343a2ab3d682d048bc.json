{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\auth-react\\\\src\\\\store\\\\auth-context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useCallback } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst initState = {\n  isLoggedIn: false,\n  token: \"\",\n  logIn: token => {},\n  logOut: () => {}\n};\n\nconst calculateRemainingTime = exTime => {\n  const currentTime = new Date().getTime();\n  const expireTime = new Date(exTime).getTime();\n  console.log(expireTime - currentTime);\n  return expireTime - currentTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"Token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"Token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nconst AuthContext = /*#__PURE__*/createContext(initState);\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const isLoggedIn = !!token;\n\n  const loginHandler = (token, expirationTime) => {\n    localStorage.setItem(\"Token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    setToken(token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    console.log(\"running\");\n    localStorage.removeItem(\"Token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    isLoggedIn,\n    token,\n    logIn: loginHandler,\n    logOut: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","logoutTimer","initState","isLoggedIn","token","logIn","logOut","calculateRemainingTime","exTime","currentTime","Date","getTime","expireTime","console","log","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContext","AuthContextProvider","props","tokenData","initialToken","setToken","loginHandler","expirationTime","setItem","setTimeout","logoutHandler","clearTimeout","contextValue","children"],"sources":["D:/React/projects/auth-react/src/store/auth-context.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useCallback } from \"react/cjs/react.production.min\";\r\nlet logoutTimer;\r\nconst initState = {\r\n  isLoggedIn: false,\r\n  token: \"\",\r\n  logIn: (token) => {},\r\n  logOut: () => {},\r\n};\r\nconst calculateRemainingTime = (exTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const expireTime = new Date(exTime).getTime();\r\n  console.log(expireTime - currentTime);\r\n  return expireTime - currentTime;\r\n};\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"Token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"Token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n  return { token: storedToken, duration: remainingTime };\r\n};\r\n\r\nconst AuthContext = createContext(initState);\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n  const isLoggedIn = !!token;\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    localStorage.setItem(\"Token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n    setToken(token);\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    console.log(\"running\");\r\n    localStorage.removeItem(\"Token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData]);\r\n  const contextValue = {\r\n    isLoggedIn,\r\n    token,\r\n    logIn: loginHandler,\r\n    logOut: logoutHandler,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}